name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: lauthz
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: true
      matrix:
        #        php: [ ]
        #        laravel: [ ]
        #        stability: [ prefer-lowest, prefer-stable ]
        include:
          # Laravel 5.5
          - php: 7.1
            laravel: 5.5.*
            phpunit: ~6.0
          - php: 7.2
            laravel: 5.5.*
            phpunit: ~6.0
          - php: 7.3
            laravel: 5.5.*
            phpunit: ~6.0

          # Laravel 5.6
          - php: 7.1
            laravel: 5.6.*
            phpunit: ~7.0
          - php: 7.2
            laravel: 5.6.*
            phpunit: ~7.0
          - php: 7.3
            laravel: 5.6.*
            phpunit: ~7.0

          # Laravel 5.7
          - php: 7.1
            laravel: 5.7.*
            phpunit: ~7.5
          - php: 7.2
            laravel: 5.7.*
            phpunit: ~7.5
          - php: 7.3
            laravel: 5.7.*
            phpunit: ~7.5

          # Laravel 5.8
          - php: 7.1
            laravel: 5.8.*
            phpunit: ~7.5
          - php: 7.2
            laravel: 5.8.*
            phpunit: ~8.0
          - php: 7.3
            laravel: 5.8.*
            phpunit: ~8.0

          # Laravel 6.x
          - php: 7.2
            laravel: 6.*
            phpunit: ~8.0
          - php: 7.3
            laravel: 6.*
            phpunit: ~8.0

          # Laravel 7.x
          - php: 7.3
            laravel: 7.*
            phpunit: ~9.0
          - php: 7.4
            laravel: 7.*
            phpunit: ~9.0

          # Laravel 8.x
          - php: 7.3
            laravel: 8.*
            phpunit: ~9.0
          - php: 7.4
            laravel: 8.*
            phpunit: ~9.0
          - php: 8.0
            laravel: 8.*
            phpunit: ~9.0

    name: Laravel${{ matrix.laravel }}-PHP${{ matrix.php }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: xdebug

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: |
          composer require laravel/framework:${{ matrix.laravel }} --no-update --no-interaction
          composer require laravel/laravel:${{ matrix.laravel }} phpunit/phpunit:${{ matrix.phpunit }} --no-update --no-interaction --dev
          composer install --prefer-dist --no-progress --no-suggest

      - name: Run test suite
        run: ./vendor/bin/phpunit -v

      - name: Run Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: ${{ runner.os }} - ${{ matrix.php }} - Laravel${{ matrix.laravel }}
        run: |
          composer global require php-coveralls/php-coveralls:^2.4
          php-coveralls --coverage_clover=build/logs/clover.xml -v

  upload-coverage:
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  semantic-release:
    runs-on: ubuntu-latest
    needs: [ test, upload-coverage ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.17'

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release